<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Feature.Services.Cpp</name>
    </assembly>
    <members>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Refactorings.CppUE4RpcRefactoringHelper.GetFunctionType(System.String)">
            <remarks><c>FindGeneratedFunctions</c> should be called prior calling this function</remarks>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Refactorings.CppUE4RpcRefactoringHelper.FindGeneratedFunctions(JetBrains.ReSharper.Psi.IDeclaredElement)">
            <summary>Searches for RPC generated functions and memorizes their names/types for further checking</summary>
            <remarks>
            Expects <c>CppLinkageEntityDeclaredElement</c> as input.
            SLOW! Queries LinkageCache - so don't use in performance critical code or in often-called methods like IsAvailable.
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Cpp.ContextHighlighter.CppMatchingFormatContextHighlighter">
            <summary>
            This class matches corresponding "... %_ ..." and arguments of printf()
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.ContextHighlighter.CppMatchingFormatContextHighlighter.CollectHighlightings(JetBrains.ReSharper.Psi.DataContext.IPsiDocumentRangeView,JetBrains.ReSharper.Daemon.CaretDependentFeatures.HighlightingsConsumer)">
            <summary>
            Entry point of the class: collects highlighting of corresponding format codes and arguments of printf()
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.ContextHighlighter.CppMatchingFormatContextHighlighter.FindPrintfExpression(JetBrains.ReSharper.Psi.Cpp.Tree.ICppExpressionNode,JetBrains.ReSharper.Psi.Cpp.Services.CppFormatOverviewBase@,System.Int32@)">
            <summary>
            finds the enveloping printf (if any) and tells the index of selected argument (that may be a buffer, a format, or a data to print - we don't check it yet)
            </summary>
            <returns>true if a highlightable printf() is found, false otherwise</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppOptionsPage">
            <summary>
            Root options page for the C++ language options.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy">
             <summary>
            	<para>
            		<para>ClangTidy Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                           pXqD##80BM        
                           pX--.'''BM        
                           pX--.'''BM        
                           pX--.'''BM        
                           pX--.'''BM        
                          ^pX--.'''BM/       
                         ?wT_--.'''^iWV      
                         4w``--.''''_W$      
                         4wpXqD##80BMW$      
                       ,Sp+  `````` .BX      
                    '*apT`  ```````  BB      
               "=LlP4|^`  ``.'````` -Bq      
               ek=_.    ```+{`````` *Bv      
               \4_      -=aP'````` _#8`      
                fh*` `^fOR{`     `+Dq'       
                 ~5wbpXOqRRRD###88qc`        
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PopetilThemedIconsThemedIcons+ClangTidy}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PopetilThemedIconsThemedIcons.ClangTidy))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PopetilThemedIconsThemedIcons.ClangTidy.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PopetilThemedIconsThemedIcons.ClangTidy&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy.Load_Color">
            <summary>Loads the image for Themed Icon ClangTidy theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy.Load_Gray">
            <summary>Loads the image for Themed Icon ClangTidy theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy.Load_GrayDark">
            <summary>Loads the image for Themed Icon ClangTidy theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.ClangTidy.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ClangTidy.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance">
             <summary>
            	<para>
            		<para>Performance Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                  `_~*?T1Cf{)
                              -"\{C7L+=^^=;aa
                           ';slc;,__:,"~^=;P5
                   ``-'''^Jl+,''__:,"~^==;(PL
               `=c|?*\LLcL"'''__:~;^^==;;LPP`
              `zT'``':^===''__:+ePPPY!;+*Sh" 
               Tz``=llllv^__:,"}PPPPP?*LE4=  
               _vT'.+lFc,_:,"~^;zIj{J\?P4=   
                '{C_'___:,"~^==;;+*\L|6V~    
                cYL'__:,"~^==;;+*\LTSGv`     
               '=T5|=,"~^==;;+*\L?YhGv       
              `^,`:7E1+==;;+*\L725r*b7       
              =='-` 'zaYc+*\T}Y1Ya:\O+       
             '+^_'````:vVEj64j!::'_A4-       
             =\~::__:,""~c='_LEHe2pP.        
             *r+;^^:_-`         -_-          
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PopetilThemedIconsThemedIcons+Performance}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PopetilThemedIconsThemedIcons.Performance))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PopetilThemedIconsThemedIcons.Performance.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PopetilThemedIconsThemedIcons.Performance&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance.Load_Color">
            <summary>Loads the image for Themed Icon Performance theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance.Load_Gray">
            <summary>Loads the image for Themed Icon Performance theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance.Load_GrayDark">
            <summary>Loads the image for Themed Icon Performance theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Performance.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon Performance.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal">
             <summary>
            	<para>
            		<para>Unreal Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                      ~TZh#Nggg8GjT=         
                   \D@@RY?;,..:=?}A@@0T      
                 Y@@X+`             =h@@a`   
               ~g@}`    .++`        '" c@g;  
              =@g'   `1g@@       +8@R-  `g@\ 
             '@@'  `1@@@@@h`  +8@@@|     `g@_
             G@v  c@@m4@@@@.   @@@@:      +@M
             g@_ 5@Y`  @@@@.   @@@@.      `@@
             g@''g"    @@@@.   @@@@.      `@@
             q@?'`     @@@@.   @@@@_  ``  =@N
             _@@`      @@@@=`"1@@@@ETn;  `g@^
              c@g`   `Y@@@@@@@@@@@@@A'  `B@1 
               *@gL    ^Y8@@@gc +85.   ^g@J  
                `G@gn,     `.       _}g@D'   
                  -{g@gEc=_-  `_=L5g@gj'     
                     `cjA0gg@@@gMXjT.        
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PopetilThemedIconsThemedIcons+Unreal}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PopetilThemedIconsThemedIcons.Unreal))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PopetilThemedIconsThemedIcons.Unreal.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PopetilThemedIconsThemedIcons.Unreal&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal.Load_Color">
            <summary>Loads the image for Themed Icon Unreal theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal.Load_Gray">
            <summary>Loads the image for Themed Icon Unreal theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal.Load_GrayDark">
            <summary>Loads the image for Themed Icon Unreal theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.Options.CppThemedIcons.Unreal.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon Unreal.</summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.ProjectModel.UE4.CppUE4TargetConfiguration.UnknownUnknown">
            <summary>
            Completely unknown configuration encountered while reading json with UE4 properties
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.ProjectModel.UE4.CppUE4TargetConfiguration.Unknown">
            <summary>
            Unknown configuration "defined" in UE4
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.ProjectModel.UE4.CppUE4TargetPlatform.UnknownUnknown">
            <summary>
            Completely unknown platform encountered while reading json with UE4 properties
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.ProjectModel.UE4.CppUE4TargetPlatform.Unknown">
            <summary>
            Unknown platform "defined" in UE4
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.SelectEmbracingConstruct.CppSelectEmbracingConstructUtil.BuildNodeSelection(JetBrains.ReSharper.Psi.Tree.IFile,JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Feature.Services.SelectEmbracingConstruct.ExtendToTheWholeLinePolicy)">
            <summary>
            Builds embracing selection construct for the individual node of PSI-tree
            </summary>
            <param name="fileNode">target file to peek into</param>
            <param name="node">target node to build embracing selection construct around</param>
            <param name="ewpl">extend-the-whole-line policy value</param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.SelectEmbracingConstruct.CppSelectEmbracingConstructUtil.ExtendRangeSelection(JetBrains.ReSharper.Psi.Tree.IFile,JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Extends embracing selection construct for the given PSI-tree's nodes 'range'
            </summary>
            <param name="fileNode">target file to peek into</param>
            <param name="first">head node of the range</param>
            <param name="last">tail node of the range</param>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Feature.Services.Cpp.SelectEmbracingConstruct.CppSelectEmbracingConstructUtil.ExtendPPRangeSelection(JetBrains.ReSharper.Psi.Tree.IFile,JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Tree.ITreeNode)">
            <summary>
            Extends embracing PP selection construct for the given PSI-tree's nodes 'range'
            </summary>
            <param name="fileNode">target file to peek into</param>
            <param name="first">head node of the range</param>
            <param name="last">tail node of the range</param>
            <returns></returns>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.BinaryType.Executable">
            <summary>
            An executable
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.BinaryType.DynamicLinkLibrary">
            <summary>
            A dynamic library (.dll, .dylib, or .so)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.BinaryType.StaticLibrary">
            <summary>
            A static library (.lib or .a)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PluginType.Engine">
            <summary>
            Plugin is built-in to the engine
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PluginType.Enterprise">
            <summary>
            Enterprise plugin
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PluginType.Project">
            <summary>
            Project-specific plugin, stored within a game project directory
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PluginType.External">
            <summary>
            Plugin found in an external directory (found in an AdditionalPluginDirectory listed in the project file, or referenced on the command line)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PluginType.Mod">
            <summary>
            Project-specific mod plugin
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PchUsage.Default">
            <summary>
            Default: Engine modules use shared PCHs, game modules do not
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PchUsage.NoPCHs">
            <summary>
            Never use any PCHs.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PchUsage.NoSharedPCHs">
            <summary>
            Never use shared PCHs.  Always generate a unique PCH for this module if appropriate
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PchUsage.UseSharedPCHs">
            <summary>
            Shared PCHs are OK!
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.PchUsage.UseExplicitOrSharedPCHs">
            <summary>
            Shared PCHs may be used if an explicit private PCH is not set through PrivatePCHHeaderFile. In either case, none of the source files manually include a module PCH, and should include a matching header instead.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.RuntimeDependencyType.UFS">
            <summary>
            Only accessed through Unreal filesystem functions; may be included in a PAK file.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.RuntimeDependencyType.NonUFS">
            <summary>
            Must be kept as part of the loose filesystem.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.RuntimeDependencyType.DebugNonUFS">
            <summary>
            Debug file which must be kept as part of the loose filesystem.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.RuntimeDependencyType.SystemNonUFS">
            <summary>
            System file which must be kept as part of the loose filesystem. System files are not subject to being automatic remapping or renaming by the platform layer.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetType.Game">
            <summary>
            Cooked monolithic game executable (GameName.exe).  Also used for a game-agnostic engine executable (UE4Game.exe or RocketGame.exe)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetType.Editor">
            <summary>
            Uncooked modular editor executable and DLLs (UE4Editor.exe, UE4Editor*.dll, GameName*.dll)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetType.Client">
            <summary>
            Cooked monolithic game client executable (GameNameClient.exe, but no server code)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetType.Server">
            <summary>
            Cooked monolithic game server executable (GameNameServer.exe, but no client code)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetType.Program">
            <summary>
            Program (standalone program, e.g. ShaderCompileWorker.exe, can be modular or monolithic depending on the program)
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Unknown">
            <summary>
            Unknown target platform
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Win32">
            <summary>
            32-bit Windows
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Win64">
            <summary>
            64-bit Windows
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Mac">
            <summary>
            Mac
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.XboxOne">
            <summary>
            XboxOne
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.PS4">
            <summary>
            Playstation 4
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.IOS">
            <summary>
            iOS
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.HTML5">
            <summary>
            HTML5
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Linux">
            <summary>
            Linux
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.AllDesktop">
            <summary>
            All desktop platforms
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.TVOS">
            <summary>
            TVOS
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Switch">
            <summary>
            Nintendo Switch
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Quail">
            <summary>
            NDA'd platform Quail
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetPlatform.Lumin">
            <summary>
            Confidential platform
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetConfiguration">
            <summary>
            The type of configuration a target can be built for
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetConfiguration.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetConfiguration.Debug">
            <summary>
            Debug configuration
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetConfiguration.DebugGame">
            <summary>
            DebugGame configuration; equivalent to development, but with optimization disabled for game modules
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetConfiguration.Development">
            <summary>
            Development configuration
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetConfiguration.Shipping">
            <summary>
            Shipping configuration
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Feature.Services.Cpp.UE4.UnrealTargetConfiguration.Test">
            <summary>
            Test configuration
            </summary>
        </member>
    </members>
</doc>
